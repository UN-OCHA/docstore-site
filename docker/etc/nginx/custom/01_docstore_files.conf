## Download handler.
location ~ "^/files/([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/([^/]+)(\.[0-9a-zA-Z]+)$" {
  set $docstore_media_uuid "$1$2$3";
  set $docstore_media_path "$1/$2/$1$2$3$5";
  set $docstore_filename "$4$5";

  ## Nginx doesn't support multiple named locations so we use the /dev/null
  ## trick to jump to the public file testing first from which will jump
  ## to the private file testing if there was no public file.
  try_files /dev/null @docstore-public-file;
}

## Check if there is a public symlink specific to the provider (which may
## point to any of the files (versions) of the media). If not, check if
## there is public symlink to the latest version.
location @docstore-public-file {
  ## Do not log 404 for missing files.
  log_not_found off;

  ## Path to the public files.
  set $docstore_base_path "/sites/default/files/media";

  ## Skip if the media is hidden for the provider.
  if (-f "$document_root$docstore_base_path/$docstore_version/hidden/$docstore_media_path") {
    return 404;
  }

  ## Return the passed filename.
  add_header Content-Disposition 'attachment; filename="$docstore_filename"';
  add_header Cache-Control 'private';

  ## Check if there is a symlink for the provider, otherwise attempt to serve
  ## the latest version. If not available check if this is a private media.
  try_files "$docstore_base_path/$docstore_version/$docstore_media_path" "$docstore_base_path/latest/$docstore_media_path" @docstore-private-file;
}

## Check if there is a private symlink specific to the provider (which may
## point to any of the files (versions) of the media). If not, check if
## there is private symlink to the latest version.
location @docstore-private-file {
  ## Do not log 404 for missing files.
  log_not_found off;

  ## Path to the private files.
  set $docstore_base_path "/sites/default/private/media";

  ## Skip if the media is hidden for the provider.
  if (-f "$document_root$docstore_base_path/$docstore_version/hidden/$docstore_media_path") {
    return 404;
  }

  ## Check if there is a private symlink specific to the provider.
  set $docstore_file "$docstore_base_path/$docstore_version/$docstore_media_path";
  if (-f "$document_root$docstore_file") {
    rewrite ^.+$ /docstore-private-file last;
  }

  ## Check if there is a private symlink for the latest version.
  set $docstore_file "$docstore_base_path/latest/$docstore_media_path";
  if (-f "$document_root$docstore_file") {
    rewrite ^.+$ /docstore-private-file last;
  }

  return 404;
}

## Return the content of a private file after checking access.
location = /docstore-private-file {
  internal;

  ## Check access to the media.
  auth_request /docstore-private-file-access;

  ## Return the passed filename.
  add_header Content-Disposition 'attachment; filename="$docstore_filename"';
  add_header Cache-Control 'private';

  try_files $docstore_file =404;
}

## Check access to the media.
location = /docstore-private-file-access {
  internal;

  ## This returns a 200 if access is granted, 403 otherwise.
  include apps/drupal/fastcgi_no_args_drupal.conf;
  fastcgi_param REQUEST_URI "/api/v1/files/$docstore_media_uuid/access";
  fastcgi_pass phpcgi;
}
