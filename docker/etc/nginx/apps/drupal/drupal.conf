# -*- mode: nginx; mode: flyspell-prog;  ispell-local-dictionary: "american" -*-
### Nginx configuration for Drupal. This configuration makes use of
### drush (http:///drupal.org/project/drush) for site maintenance
### and like tasks:
###
### 1. Run the cronjobs.
### 2. Run the DB and code updates: drush up or drush upc followed by
###    drush updb to run any DB updates required by the code upgrades
###    that were performed.
### 3. Disabling of xmlrpc.xml, install.php (needed only for
###    installing the site) and update.php: all updates are now
###    handled through drush.

## The 'default' location.
location / {

    ## Drupal 404 from can impact performance. If using a module like
    ## search404 then 404's *have *to be handled by Drupal. Uncomment to
    ## relay the handling of 404's to Drupal.
    ## error_page 404 /index.php;

    ## Using a nested location is the 'correct' way to use regexes.

    ## Handle requests to get a file's content.
    location ~ "^/files/([^/]{2})([^/]{2})([^/]{32})/([^/]+)(\.[^./]+)$" {
        ## Do not log 404 for missing files.
        log_not_found off;

        ## If a matching private file exists, pass to drupal by rewriting the
        ## url to the /api/v1/files/{file-uuid}/content endpoint.
        if (-f "$document_root/sites/default/private/files/$1/$2/$1$2$3$5") {
            rewrite ^/files/([^/]+)/[^/]+$ /api/v1/files/$1/content last;
        }

        ## Otherwise check for a matching public file.
        try_files "/sites/default/files/files/$1/$2/$1$2$3$5" =404;
    }

    ## Handle requests to the file content endpoint.
    location ~ ^/api/v1/files/[^/]+/content$ {
        ## Include the FastCGI config.
        include apps/drupal/fastcgi_drupal.conf;
        ## We use the uri and not the request_uri to ensure we pass the
        ## rewritten uri for private files from the `/files/...` block above.
        fastcgi_param REQUEST_URI $uri;
        fastcgi_pass phpcgi;
    }

    ## Replicate the Apache <FilesMatch> directive of Drupal standard
    ## .htaccess. Disable access to any code files. Return a 404 to curtail
    ## information disclosure.
    location ~* ^(?:.+\.(?:htaccess|make|engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
        return 404;
    }

    ## First we try the URI and relay to the /index.php?q=$uri&$args if not found.
    try_files $uri @drupal;
}

########### Security measures ##########

## Uncomment the line below if you want to enable basic auth for
## access to all /admin URIs. Note that this provides much better
## protection if use HTTPS. Since it can easily be eavesdropped if you
## use HTTP.
#include apps/drupal/admin_basic_auth.conf;

## Restrict access to the strictly necessary PHP files. Reducing the
## scope for exploits. Handling of PHP code and the Drupal event loop.
location @drupal {
    ## Include the FastCGI config.
    include apps/drupal/fastcgi_drupal.conf;
    fastcgi_pass phpcgi;

    ## If proxying to apache comment the two lines above and
    ## uncomment the two lines below.
    #proxy_pass http://phpapache/index.php?q=$uri;
    #proxy_set_header Connection '';

    ## Filefield Upload progress
    ## http://drupal.org/project/filefield_nginx_progress support
    ## through the NginxUploadProgress modules.
    # track_uploads uploads 60s;
}

location @drupal-no-args {
    ## Include the specific FastCGI configuration. This is for a
    ## FCGI backend like php-cgi or php-fpm.
    include apps/drupal/fastcgi_no_args_drupal.conf;
    fastcgi_pass phpcgi;

    ## If proxying to apache comment the two lines above and
    ## uncomment the two lines below.
    #proxy_pass http://phpapache/index.php?q=$uri;
    #proxy_set_header Connection '';
}

## Disallow access to .bzr, .git, .hg, .svn, .cvs directories: return
## 404 as not to disclose information.
location ^~ /.bzr {
    return 404;
}

location ^~ /.git {
    return 404;
}

location ^~ /.hg {
    return 404;
}

location ^~ /.svn {
    return 404;
}

location ^~ /.cvs {
    return 404;
}

## Disallow access to patches directory.
location ^~ /patches {
    return 404;
}

## Disallow access to drush backup directory.
location ^~ /backup {
    return 404;
}

## Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
    ## Add support for the robotstxt module
    ## http://drupal.org/project/robotstxt.
    try_files $uri @drupal-no-args;
}

## RSS feed support.
location = /rss.xml {
    try_files $uri @drupal-no-args;
}

## XML Sitemap support.
location = /sitemap.xml {
    try_files $uri @drupal-no-args;
}

## Support for favicon. Return an 1x1 transparent GIF if it doesn't
## exist.
location = /favicon.ico {
    expires 30d;
    try_files /favicon.ico @empty;
}

## Return an in memory 1x1 transparent GIF.
location @empty {
    expires 30d;
    empty_gif;
}

## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404;
}

if ( $args ~* "/autocomplete/" ) {
  return 406;
  ### error_page 406 = @drupal; ### error_page directive is not allowed within pseudo-location
}

error_page 406 = @drupal;
