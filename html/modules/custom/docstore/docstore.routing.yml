# General
docstore_wait:
  path: '/api/v1/wait'
  defaults:
    _controller: 'docstore.document_controller:wait'
    _title: 'Wait a second'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'

# me
docstore_get_me:
  path: '/api/v1/me'
  defaults:
    _controller: 'docstore.provider_controller:getInfo'
    _title: 'Get provider info'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_update_me:
  path: '/api/v1/me'
  defaults:
    _controller: 'docstore.provider_controller:updateInfo'
    _title: 'Update provider info'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'B'

# hooks
docstore_get_hooks:
  path: '/api/v1/webhooks'
  defaults:
    _controller: 'docstore.webhook_controller:getWebhooks'
    _title: 'Get hooks'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_create_hook:
  path: '/api/v1/webhooks'
  defaults:
    _controller: 'docstore.webhook_controller:createWebhook'
    _title: 'Create hook'
  methods: [POST]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'B'
docstore_delete_hook:
  path: '/api/v1/webhooks/{id}'
  defaults:
    _controller: 'docstore.webhook_controller:deleteWebhook'
    _title: 'Delete hook'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'B'

# Document types
docstore_document_get_types:
  path: '/api/v1/types'
  defaults:
    _controller: 'docstore.doctype_controller:getDocumentTypes'
    _title: 'Get document types'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'
docstore_document_create_type:
  path: '/api/v1/types'
  defaults:
    _controller: 'docstore.doctype_controller:createDocumentType'
    _title: 'Create document type'
  methods: [POST]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'A'
docstore_document_get_type:
  path: '/api/v1/types/{type}'
  defaults:
    _controller: 'docstore.doctype_controller:getDocumentType'
    _title: 'Get document type'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'
docstore_document_update_type:
  path: '/api/v1/types/{type}'
  defaults:
    _controller: 'docstore.doctype_controller:updateDocumentType'
    _title: 'Update document type'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'
docstore_document_delete_type:
  path: '/api/v1/types/{type}'
  defaults:
    _controller: 'docstore.doctype_controller:deleteDocumentType'
    _title: 'Delete document type'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'

# Document fields
docstore_document_get_fields:
  path: '/api/v1/types/{type}/fields'
  defaults:
    _controller: 'docstore.doctype_controller:getDocumentFields'
    _title: 'Get document fields'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'
docstore_document_create_fields:
  path: '/api/v1/types/{type}/fields'
  defaults:
    _controller: 'docstore.doctype_controller:createDocumentField'
    _title: 'Create document field'
  methods: [POST]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'A'
docstore_document_get_field:
  path: '/api/v1/types/{type}/fields/{id}'
  defaults:
    _controller: 'docstore.doctype_controller:getDocumentField'
    _title: 'Get document field'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'
docstore_document_update_field:
  path: '/api/v1/types/{type}/fields/{id}'
  defaults:
    _controller: 'docstore.doctype_controller:updateDocumentField'
    _title: 'Update document field'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'
docstore_document_delete_field:
  path: '/api/v1/types/{type}/fields/{id}'
  defaults:
    _controller: 'docstore.doctype_controller:deleteDocumentField'
    _title: 'Delete document field'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'

# Documents
docstore_get_any_document:
  path: '/api/v1/documents'
  defaults:
    _controller: 'docstore.document_controller:getDocuments'
    _title: 'Get documents'
    type: 'any'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_get_documents:
  path: '/api/v1/documents/{type}'
  defaults:
    _controller: 'docstore.document_controller:getDocuments'
    _title: 'Get documents'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_create_document:
  path: '/api/v1/documents/{type}'
  defaults:
    _controller: 'docstore.document_controller:createDocument'
    _title: 'Create document'
  methods: [POST]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'B'
docstore_create_document_in_bulk:
  path: '/api/v1/documents/{type}/bulk'
  defaults:
    _controller: 'docstore.document_controller:processDocumentsInBulk'
    _title: 'Create, update or delete documents in bulk'
  methods: [POST, 'PUT', 'PATCH', 'DELETE']
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'B'
docstore_get_document_all_files:
   path: '/api/v1/documents/{type}/files'
   defaults:
     _controller: 'docstore.document_controller:getAllDocumentFiles'
     _title: 'Get all files for this document type'
   methods: [GET]
   requirements:
     _docstore_access_check: 'TRUE'
   options:
     _auth: ['docstore_auth']
     docstore_crud: 'R'
     docstore_access_level: 'B'
docstore_get_document:
  path: '/api/v1/documents/{type}/{id}'
  defaults:
    _controller: 'docstore.document_controller:getDocument'
    _title: 'Get document'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_get_document_revisions:
  path: '/api/v1/documents/{type}/{id}/revisions'
  defaults:
    _controller: 'docstore.document_controller:getDocumentRevisions'
    _title: 'Get document revisions'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_get_document_revision:
  path: '/api/v1/documents/{type}/{id}/revisions/{vid}'
  defaults:
    _controller: 'docstore.document_controller:getDocumentRevision'
    _title: 'Get document revision'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_publish_document_revision:
  path: '/api/v1/documents/{type}/{id}/revisions/{vid}/publish'
  defaults:
    _controller: 'docstore.document_controller:publishDocumentRevision'
    _title: 'Set document revision'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'B'
docstore_get_document_files:
  path: '/api/v1/documents/{type}/{id}/files'
  defaults:
    _controller: 'docstore.document_controller:getDocumentFiles'
    _title: 'Get document files'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_get_document_terms:
  path: '/api/v1/documents/{type}/{id}/terms'
  defaults:
    _controller: 'docstore.document_controller:getDocumentTerms'
    _title: 'Get document terms'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_update_document:
  path: '/api/v1/documents/{type}/{id}'
  defaults:
    _controller: 'docstore.document_controller:updateDocument'
    _title: 'Update document'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'B'
docstore_delete_document:
  path: '/api/v1/documents/{type}/{id}'
  defaults:
    _controller: 'docstore.document_controller:DeleteDocument'
    _title: 'Delete document'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'D'
    docstore_access_level: 'B'

# Vocabularies
docstore_get_vocabularies:
  path: '/api/v1/vocabularies'
  defaults:
    _controller: 'docstore.vocabulary_controller:getVocabularies'
    _title: 'Get vocabularies'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_create_vocabulary:
  path: '/api/v1/vocabularies'
  defaults:
    _controller: 'docstore.vocabulary_controller:createVocabulary'
    _title: 'Create vocabulary'
  methods: [POST]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'A'
docstore_get_vocabulary:
  path: '/api/v1/vocabularies/{id}'
  defaults:
    _controller: 'docstore.vocabulary_controller:getVocabulary'
    _title: 'Get vocabulary'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_update_vocabulary:
  path: '/api/v1/vocabularies/{id}'
  defaults:
    _controller: 'docstore.vocabulary_controller:updateVocabulary'
    _title: 'Update vocabulary'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'B'
docstore_delete_vocabulary:
  path: '/api/v1/vocabularies/{id}'
  defaults:
    _controller: 'docstore.vocabulary_controller:deleteVocabulary'
    _title: 'Delete vocabulary'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'B'

# Vocabulary fields
docstore_vocabulary_getfields:
  path: '/api/v1/vocabularies/{id}/fields'
  defaults:
    _controller: 'docstore.vocabulary_controller:getVocabularyFields'
    _title: 'Get vocabulary fields'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'A'
docstore_vocabulary_create_fields:
  path: '/api/v1/vocabularies/{id}/fields'
  defaults:
    _controller: 'docstore.vocabulary_controller:createVocabularyField'
    _title: 'Create vocabulary field'
  methods: [POST]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'A'
docstore_vocabulary_get_field:
  path: '/api/v1/vocabularies/{id}/fields/{field_id}'
  defaults:
    _controller: 'docstore.vocabulary_controller:getVocabularyField'
    _title: 'Get vocabulary field'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'A'
docstore_vocabulary_update_fields:
  path: '/api/v1/vocabularies/{id}/fields/{field_id}'
  defaults:
    _controller: 'docstore.vocabulary_controller:updateVocabularyField'
    _title: 'Update vocabulary field'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'A'
docstore_vocabulary_delete_fields:
  path: '/api/v1/vocabularies/{id}/fields/{field_id}'
  defaults:
    _controller: 'docstore.vocabulary_controller:deleteVocabularyField'
    _title: 'Delete vocabulary field'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'D'
    docstore_access_level: 'A'

# Terms
# @todo change endpoints to /api/v1/terms for consistency with documents?
docstore_get_vocabulary_terms:
  path: '/api/v1/vocabularies/{id}/terms'
  defaults:
    _controller: 'docstore.term_controller:getTerms'
    _title: 'Get vocabulary terms'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_create_term_in_vocabulary:
  path: '/api/v1/vocabularies/{id}/terms'
  defaults:
    _controller: 'docstore.term_controller:createTerm'
    _title: 'Create term'
  methods: [POST]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'B'
docstore_create_term_in_bulk:
  path: '/api/v1/vocabularies/{id}/terms/bulk'
  defaults:
    _controller: 'docstore.term_controller:processTermsInBulk'
    _title: 'Create, update or delete terms in bulk'
  methods: [POST, 'PUT', 'PATCH', 'DELETE']
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'B'
docstore_get_term:
  path: '/api/v1/vocabularies/{id}/terms/{term_id}'
  defaults:
    _controller: 'docstore.term_controller:getTerm'
    _title: 'Get term'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_get_term_revisions:
  path: '/api/v1/vocabularies/{id}/terms/{term_id}/revisions'
  defaults:
    _controller: 'docstore.term_controller:getTermRevisions'
    _title: 'Get term'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_get_term_revision:
  path: '/api/v1/vocabularies/{id}/terms/{term_id}/revisions/{revision_id}'
  defaults:
    _controller: 'docstore.term_controller:getTermRevision'
    _title: 'Get term'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_publish_term_revision:
  path: '/api/v1/vocabularies/{id}/terms/{term_id}/revisions/{revision_id}/publish'
  defaults:
    _controller: 'docstore.term_controller:publishTermRevision'
    _title: 'Publish term revision'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'B'
docstore_update_term:
  path: '/api/v1/vocabularies/{id}/terms/{term_id}'
  defaults:
    _controller: 'docstore.term_controller:updateTerm'
    _title: 'Update term'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'B'
docstore_delete_term:
  path: '/api/v1/vocabularies/{id}/terms/{term_id}'
  defaults:
    _controller: 'docstore.term_controller:DeleteTerm'
    _title: 'Delete term'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'D'
    docstore_access_level: 'B'

# Files
docstore_get_files:
  path: '/api/v1/files'
  defaults:
    _controller: 'docstore.file_controller:getFiles'
    _title: 'Get files'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_create_file:
  path: '/api/v1/files'
  defaults:
    _controller: 'docstore.file_controller:createFile'
    _title: 'Create file'
  methods: [POST]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'A'
docstore_get_file:
  path: '/api/v1/files/{uuid}'
  defaults:
    _controller: 'docstore.file_controller:getFile'
    _title: 'Get file'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_update_file:
  path: '/api/v1/files/{uuid}'
  defaults:
    _controller: 'docstore.file_controller:updateFile'
    _title: 'Update file'
  methods: [PUT, PATCH]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'A'
docstore_delete_file:
  path: '/api/v1/files/{uuid}'
  defaults:
    _controller: 'docstore.file_controller:DeleteFile'
    _title: 'Delete file'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'D'
    docstore_access_level: 'A'
docstore_get_file_usage:
  path: '/api/v1/files/{uuid}/usage'
  defaults:
    _controller: 'docstore.file_controller:getFileUsage'
    _title: 'Get file usage'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_select_file:
  path: '/api/v1/files/{uuid}/select'
  defaults:
    _controller: 'docstore.file_controller:selectFile'
    _title: 'Select the file as the active one for the provider'
  methods: [PUT]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'U'
    docstore_access_level: 'A'
docstore_get_file_content:
  path: '/api/v1/files/{uuid}/content'
  defaults:
    _controller: 'docstore.file_controller:getFileContent'
    _title: 'Get file content'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_create_file_content:
  path: '/api/v1/files/{uuid}/content'
  defaults:
    _controller: 'docstore.file_controller:createFileContent'
    _title: 'Create file content'
  # @todo PUT allowed for backward compatibility, remove.
  methods: [POST, PUT]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'C'
    docstore_access_level: 'A'
docstore_get_file_revisions:
  path: '/api/v1/files/{uuid}/revisions'
  defaults:
    _controller: 'docstore.file_controller:getFileRevisions'
    _title: 'Get file revisions'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_get_file_revision:
  path: '/api/v1/files/{uuid}/revisions/{revision_id}'
  defaults:
    _controller: 'docstore.file_controller:getFileRevision'
    _title: 'Get file revision'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'
docstore_delete_file_revision:
  path: '/api/v1/files/{uuid}/revisions/{revision_id}'
  defaults:
    _controller: 'docstore.file_controller:deleteFileRevision'
    _title: 'Delete file revision'
  methods: [DELETE]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'D'
    docstore_access_level: 'A'
docstore_get_file_revision_content:
  path: '/api/v1/files/{uuid}/revisions/{revision_id}/content'
  defaults:
    _controller: 'docstore.file_controller:getFileRevisionContent'
    _title: 'Get file revision content'
  methods: [GET]
  requirements:
    _docstore_access_check: 'TRUE'
  options:
    _auth: ['docstore_auth']
    docstore_crud: 'R'
    docstore_access_level: 'B'

# Download a file
docstore_download_file:
  path: '/files/{uuid}/{filename}'
  defaults:
    _controller: 'docstore.download_controller:downloadFile'
    _title: 'Download a file'
  methods: [GET]
  requirements:
    _access: 'TRUE'
  options:
    docstore_crud: 'R'
